{"version":3,"sources":["components/images/no_image.jpg","components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.jsx","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.jsx","components/styles/StyledSearchBar.js","components/elements/SearchBar.jsx","components/styles/StyledGrid.js","components/elements/Grid.jsx","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.jsx","components/styles/StyledSpinner.js","components/elements/Spinner.jsx","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.jsx","components/styles/StyledFooter.js","components/elements/Footer.jsx","components/hooks/useHomeFetch.jsx","components/Home.jsx","components/styles/StyledNavigation.js","components/elements/Navigation.jsx","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.jsx","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.jsx","components/styles/StyledActor.js","components/elements/Actor.jsx","components/hooks/useMovieFetch.jsx","components/Movie.jsx","components/NotFound.jsx","components/styles/GlobalStyle.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","href","TMDBLogo","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","StyledMovieThumb","MovieThumb","movieId","clickable","StyledFooter","Footer","useHomeFetch","searchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","message","useEffect","sessionStorage","homeState","JSON","parse","log","setItem","stringify","Home","setSearchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","director","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","useMovieFetch","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","Movie","match","params","runtime","NotFound","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d378da5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from \"react\"\r\n\r\n\r\n// importting components\r\nimport RMDBLogo from \"../images/reactMovie_logo.png\"\r\nimport TMDBLogo from \"../images/tmdb_logo.svg\"\r\n\r\n// importing styles\r\nimport {StyledTMDBLogo, StyledRMDBLogo, StyledHeader} from \"../styles/StyledHeader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n    <StyledHeader>\r\n        <div className=\"header-content\">\r\n            <Link to=\"/\">\r\n                <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\"/>\r\n            </Link>\r\n            <a href=\"https://www.themoviedb.org/?language=en-US\">\r\n                <StyledTMDBLogo src={TMDBLogo} alt=\"tldb-logo\"/>\r\n            </a>\r\n        </div>\r\n    </StyledHeader>\r\n)\r\n\r\n\r\n\r\nexport default Header","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=<API_Key>\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '33bb8436c172b0643a6db970caa59640';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n    \n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';          // Width of the image\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';          // Width of the image\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StyledHeroImage } from \"../styles/StyledHeroImage\"\r\n\r\n\r\nconst HeroImage = ({image, title, text}) => (\r\n    <StyledHeroImage image={image}>\r\n        <div className=\"heroimage-content\">\r\n            <div className=\"heroimage-text\">\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    </StyledHeroImage>\r\n)\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n}\r\nexport default HeroImage","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, {useState, useRef} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport FontAwesome from \"react-fontawesome\"\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from \"../styles/StyledSearchBar.js\"\r\nconst SearchBar = ( { callback } ) => {\r\n    const [state, setState] = useState(\"\")\r\n    const timeOut = useRef(null);\r\n\r\n    const doSearch = (event) => {\r\n        const { value } = event.target\r\n        \r\n        clearTimeout(timeOut.current)\r\n        setState(value)\r\n        \r\n        timeOut.current = setTimeout(() => callback(value), 500)\r\n    }\r\n    return (\r\n        <StyledSearchBar>\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search movies\"\r\n                    onChange={doSearch}\r\n                    value={state}\r\n                />\r\n\r\n            \r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar>\r\n    )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    callback: PropTypes.func\r\n}\r\n\r\nexport default SearchBar","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 10px auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// importing Styles\r\nimport { StyledGrid, StyledGridContent } from \"../styles/StyledGrid\"\r\n\r\nconst Grid = ({ header, children }) =>(\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n)\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    // children: PropTypes.       -----------> children are auto generated so no proptype checking req\r\n}\r\nexport default Grid","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\n//  importing styles\r\nimport { StyledLoadMoreBtn } from \"../styles/StyledLoadMoreBtn\"\r\n\r\nconst LoadMoreBtn = ({ text, callback}  ) => (\r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n    </StyledLoadMoreBtn>\r\n)\r\n\r\nLoadMoreBtn.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n}\r\nexport default LoadMoreBtn","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from \"react\"\r\n\r\nimport { StyledSpinner } from \"../styles/StyledSpinner.js\"\r\n\r\nconst Spinner = () => <StyledSpinner />\r\n\r\nexport default Spinner","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\n//  importing the style\r\nimport { StyledMovieThumb } from \"../styles/StyledMovieThumb\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst MovieThumb = ({image, movieId, clickable}) => (\r\n    <Link to={\"/movie/\"+movieId}>\r\n        <StyledMovieThumb>\r\n            {\r\n                clickable  ? \r\n                    <img className=\"clickable\" src={image} alt=\"movie Thumbnail\" />\r\n                : \r\n                    <img src={image} alt = \"movie Thumbnail non clickable\" />   \r\n            }\r\n        </StyledMovieThumb>\r\n    </Link>\r\n)\r\n\r\nMovieThumb.propTypes={\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n}\r\n\r\nexport default MovieThumb","\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.div`\r\n  background: #1c1c1c;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  font-family: 'Abel', sans-serif;  \r\n//   border: 1px solid yellow;\r\n  a{\r\n      color: white;\r\n      text-decoration: none;\r\n      font-size:2rem;\r\n\r\n  }\r\n  .footer-content {\r\n    // border: 1px solid white;\r\n    max-width: 1280px;\r\n    min-height: 30px;\r\n    padding: 20px  0;\r\n    \r\n    margin: 0 auto;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 500px) {\r\n      max-width: 1280px;\r\n      min-height: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport FontAwesome from \"react-fontawesome\"\r\n\r\n// importting components\r\nimport RMDBLogo from \"../images/reactMovie_logo.png\"\r\nimport TMDBLogo from \"../images/tmdb_logo.svg\"\r\n\r\n// importing styles\r\nimport {StyledFooter} from \"../styles/StyledFooter\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => (\r\n    <StyledFooter>\r\n        <div className=\"footer-content\">\r\n            <a href = \"https://github.com/yashodeepchikte\">\r\n                Made with  ❤ by Yashodeep\r\n            </a>\r\n            <a href=\"https://github.com/yashodeepchikte/Keep-Watching\">\r\n                <FontAwesome  className=\"fa fa-github\" name=\"clock-o\" size=\"1x\"/>\r\n            </a>\r\n        </div>\r\n    </StyledFooter>\r\n)\r\n\r\n\r\n\r\nexport default Footer","import {useState, useEffect} from \"react\"\r\nimport  {\r\n    POPULAR_BASE_URL \r\n}\r\nfrom \"../../config\"\r\n\r\nconst useHomeFetch = (searchTerm) => {\r\n    const [state, setState] = useState( { movies: [] } )\r\n    const [loading, setLoading] = useState( false )\r\n    const [error, setError] = useState( false )\r\n \r\n    \r\n    const fetchMovies = async (endpoint) => {\r\n        setLoading(true)\r\n        setError(false)\r\n        \r\n        const isLoadMore = endpoint.search(\"page\")  // is page is present in the end point means we r loading more movies\r\n        try{\r\n            const result = await ( await fetch(endpoint) ).json();\r\n            // console.log(\"result == \", result)\r\n            setState(prev => (\r\n                    {\r\n                        ...prev,\r\n                        movies: \r\n                        ( isLoadMore !== -1 ?\r\n                         [...prev.movies, ...result.results]\r\n                         :\r\n                         [...result.results]),\r\n                        heroImage: prev.heroImage || result.results[0],\r\n                        currentPage: result.page,\r\n                        totalPages: result.total_pages\r\n                    }))\r\n            }catch(error){\r\n                setError(true)\r\n                console.error(error.message)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        \r\n        useEffect(  () => {\r\n            if (sessionStorage.homeState){\r\n                // console.log(\"Loading data from session storage\")\r\n                setState(JSON.parse(sessionStorage.homeState));\r\n                setLoading(false)\r\n            }else{\r\n\r\n                console.log(\"Fetching from the movie db api\")\r\n                fetchMovies(POPULAR_BASE_URL)\r\n            }\r\n             }, [] )\r\n        \r\n        useEffect( () => {\r\n            if(!searchTerm){\r\n                // console.log(\"Writing to session storage\")\r\n                sessionStorage.setItem('homeState', JSON.stringify(state))\r\n            }\r\n        }, [searchTerm, state])\r\n    return [{state, loading, error}, fetchMovies]\r\n}\r\n\r\nexport default useHomeFetch","import React, {useState}  from \"react\"\r\nimport {  \r\n    IMAGE_BASE_URL, BACKDROP_SIZE, \r\n    POSTER_SIZE, SEARCH_BASE_URL, \r\n    POPULAR_BASE_URL \r\n}\r\nfrom \"../config\"\r\n\r\n//  IMport components\r\nimport HeroImage from \"./elements/HeroImage\"\r\nimport SearchBar from \"./elements/SearchBar\"\r\nimport  Grid from \"./elements/Grid\"\r\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\"\r\nimport Spinner from \"./elements/Spinner\"\r\nimport MovieThubm from \"./elements/MovieThumb\"\r\nimport NoImage  from \"./images/no_image.jpg\"\r\nimport Footer from \"./elements/Footer\"\r\n\r\n// importing custom hooks\r\nimport useHomeFetch from \"./hooks/useHomeFetch\"\r\n\r\nconst Home =  () =>{\r\n    //    console.log(\"state = \", state)\r\n    \r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [{state, loading, error}, fetchMovies] =  useHomeFetch(searchTerm);\r\n   \r\n   const loadMoreMovies = () =>{\r\n        const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${state.currentPage + 1}`;\r\n        const popularEndpoint = `${POPULAR_BASE_URL}&page=${state.currentPage+1}`;\r\n    \r\n        const endpoint = searchTerm !== \"\" ? searchEndpoint : popularEndpoint;\r\n        // console.log(\"ENDPOINT + =  \", endpoint)\r\n        fetchMovies(endpoint)\r\n   }\r\n\r\n   const searchMovies = (search) => {\r\n        const endpoint = search ? SEARCH_BASE_URL + search  : POPULAR_BASE_URL;\r\n        setSearchTerm(search);\r\n        fetchMovies(endpoint);\r\n    }\r\n\r\n   if (error) return <div> Something went wromg ....</div>\r\n   if (!state.movies[0]) return <Spinner />\r\n    return (\r\n       <div>\r\n        <h1>THis is the linlk</h1>\r\n           <a href=\"/auth/google\">LOGIN With Google</a>\r\n           {!searchTerm &&\r\n               (<HeroImage \r\n               image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\r\n               title={state.heroImage.original_title}\r\n               text={state.heroImage.overview}\r\n           />)}\r\n            <Footer />        \r\n           <SearchBar callback={searchMovies}/>\r\n           <Grid header={searchTerm ? \"Search Results:\" : \"Popular Movies\"}>\r\n                {state.movies.map(movie => (\r\n                    <MovieThubm \r\n                        key={movie.id}\r\n                        clickable\r\n                        image={movie.poster_path ?`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`: NoImage}\r\n                        movieId={movie.id}\r\n                        movieName={movie.original_title}\r\n                    />\r\n                    ))\r\n                }\r\n           </Grid>\r\n           {loading && <Spinner /> }\r\n           <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\r\n           \r\n       </div>\r\n   )\r\n}\r\n\r\nexport default Home","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport {StyledNavigation} from \"../styles/StyledNavigation\"\r\n\r\nconst Navigation = ({ movie }) => {\r\n   \r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>\r\n                        Home\r\n                    </p>\r\n                </Link>\r\n                <p>|</p>\r\n                <Link to=\"\">\r\n\r\n                </Link>\r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nNavigation.propTypes={\r\n    movie: PropTypes.string\r\n}\r\n\r\nexport default Navigation","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    color:white;\n    font-family: 'Abel', sans-serif;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport NoImage from \"../images/no_image.jpg\"\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\"\r\n\r\nimport MovieThumb from \"./MovieThumb\"\r\nimport {StyledMovieInfo} from \"../styles/StyledMovieInfo\"\r\n\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n    return (\r\n        <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n            <div className=\"movieinfo-content\">\r\n                <div className=\"movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image= {\r\n                            movie.poster_path ?\r\n                            `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                            :\r\n                            NoImage\r\n                        }\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"movieinfo-text\">\r\n                        <h1>{movie.title}</h1>\r\n                        <h3>plot</h3>\r\n                        <p>{movie.overview} </p>\r\n                        <div className=\"rating-director\">                 \r\n                            <div>\r\n                                    <h3>IMDB Rating</h3>\r\n                                    <div className=\"score\">{movie.vote_average}</div>\r\n                            </div>\r\n                            <div className=\"director\">\r\n                                    <h3>DIRECTOR{movie.directors.length > 1? \"S\": \"\"}</h3>\r\n                                    <div className=\"\"> {movie.directors.map(director => {\r\n                                        return <p key={director.credit_id}>{director.name}</p>\r\n                                    })}</div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n        </StyledMovieInfo>\r\n    )\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object,\r\n    directors: PropTypes.array\r\n}\r\n\r\nexport default MovieInfo","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport FontAwesome from \"react-fontawesome\"\r\nimport {calcTime, convertMoney} from \"../../helpers\"\r\n\r\nimport {  StyledMovieInfoBar } from \"../styles/StyledMovieInfoBar\"\r\nconst MovieInfoBar = (  { time, budget, revenue}  ) => (\r\n    <StyledMovieInfoBar>\r\n        <div className=\"movieinfobar-content\">\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" /> \r\n                <span className=\"movieinfobar-info\">\r\n                    Running Time: {calcTime(time)}\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"movieinfobar-content-col\">\r\n                {\r\n                    budget !==0 \r\n                        ?\r\n                        (<>\r\n                            <FontAwesome className=\"fa-budget\" name=\"Money\" size=\"2x\" /> \r\n                            <span className=\"movieinfobar-info\">\r\n                                Budget: {convertMoney(budget)}\r\n                            </span>\r\n                        </>)\r\n                        :\r\n                        \"\"\r\n                }\r\n            </div>\r\n\r\n            <div className=\"movieinfobar-content-col\">\r\n                {\r\n                    revenue\r\n                        ?\r\n                        (<>\r\n                        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" /> \r\n                        <span className=\"movieinfobar-info\">\r\n                            Revenue: {convertMoney(revenue)}\r\n                        </span>\r\n                        </>)\r\n                        :\r\n                         \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    </StyledMovieInfoBar>\r\n)\r\n\r\nMovieInfoBar.propTypes = {\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n}\r\nexport default MovieInfoBar","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport NoImage from \"../images/no_image.jpg\"\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\"\r\n\r\nimport { StyledActor } from \"../styles/StyledActor\"\r\n\r\nconst Actor = ( {actor} ) => (\r\n    <StyledActor>\r\n        <img \r\n            src= {\r\n                actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                :\r\n                NoImage\r\n            }\r\n            alt=\"\"\r\n        />\r\n        <span className=\"actor-name\">\r\n            {actor.name}\r\n        </span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n)\r\n\r\nActor.propTypes = {\r\n    actor: PropTypes.object\r\n}\r\n\r\nexport default Actor","import {useState, useEffect, useCallback} from \"react\"\r\nimport { API_URL, API_KEY } from \"../../config\"\r\n\r\nconst useMovieFetch = (movieId) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false)\r\n        setLoading(true)\r\n\r\n        try {\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n            const result = await ( await fetch(endpoint) ).json()\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n            const creditsResult = await ( await fetch(creditsEndpoint) ).json()\r\n            \r\n\r\n\r\n            const directors =  creditsResult.crew.filter( member => member.job === \"Director\")\r\n            setState({\r\n                ...result,\r\n                actors: creditsResult.cast,\r\n                directors\r\n            })\r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error.message)\r\n        }\r\n        setLoading(false)\r\n    }, [movieId])\r\n\r\n    useEffect( () =>{\r\n        if (localStorage[movieId]){\r\n            console.log(\"grabbing from local storage\")\r\n            setState(JSON.parse(localStorage[movieId]))\r\n            setLoading(false)\r\n        }else{\r\n            console.log(\"Grabbing from the api\")\r\n            fetchData();\r\n        }\r\n    }, [fetchData, movieId])\r\n    \r\n    useEffect(\r\n        () => {\r\n            localStorage.setItem(movieId, JSON.stringify(state))\r\n        },\r\n        [movieId, state]\r\n    )\r\n    return [state, loading, error]\r\n}\r\n\r\nexport default useMovieFetch","import React from \"react\"\r\n\r\n//  importing component\r\nimport Navigation from \"./elements/Navigation\"\r\nimport MovieInfo from \"./elements/MovieInfo\"\r\nimport MovieInfoBar from \"./elements/MovieInfoBar\"\r\nimport Grid from \"./elements/Grid\"\r\nimport Spinner from \"./elements/Spinner\"\r\nimport Actor from \"./elements/Actor\"\r\n\r\n\r\n//  importing custom hook\r\nimport useMovieFetch from \"../components/hooks/useMovieFetch\"\r\nconst Movie = (props) =>{ \r\n    \r\n    const movieId = props.match.params.movieId\r\n    const [movie, loading, error] = useMovieFetch(movieId)\r\n    // console.log(\"movie= \",movie)\r\n\r\n    if (error) return <div>Something went wrong</div>\r\n    if (loading) return <Spinner />\r\n\r\n    return(\r\n        <>\r\n            <Navigation movie={movie.original_title} />\r\n            <MovieInfo movie={ movie }/>\r\n            <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue}/>\r\n            <Grid header=\"Actors\">\r\n                {\r\n                    movie.actors.map( actor => (\r\n                        <Actor key={actor.credit_id} actor={actor} />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie","import React from \"react\"\r\n\r\nconst NotFound = () => (\r\n    <h1>Not Found</h1>\r\n)\r\n\r\nexport default NotFound","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\"\n\n//  Importing components\nimport Header from \"./elements/Header\"\nimport Home from \"./Home\"\nimport Movie from \"./Movie.jsx\"\nimport NotFound from \"./NotFound\"\nimport Footer from \"./elements/Footer\"\n\n//  Importing styles\nimport {GlobalStyle} from \"./styles/GlobalStyle\"\n\nconst App = () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route exact  path=\"/\" component={Home} />\n            <Route path=\"/movie/:movieId\" component={Movie}></Route>\n            {/* The next route will be called if none of the above urls match up */}\n            <Route component={NotFound} />          \n        </Switch>\n        <Footer />        \n        <GlobalStyle />\n    </Router>\n)\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}